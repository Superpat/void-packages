# Template file for 'nvidia'

_desc="NVIDIA drivers for linux (long-lived series)"

pkgname=nvidia
version=352.79
revision=2
maintainer="Juan RP <xtraeme@voidlinux.eu>"
license="Proprietary NVIDIA license"
homepage="http://www.nvidia.com"

only_for_archs="i686 x86_64"
repository="nonfree"
create_wrksrc=yes
short_desc="${_desc} - Libraries and Utilities"
depends="nvidia-gtklibs-${version}_${revision} nvidia-dkms-${version}_${revision} pkg-config"
conflicts="catalyst>=0 xserver-abi-video>21_1"

if [ "$XBPS_TARGET_MACHINE" = "i686" ]; then
	_pkg="NVIDIA-Linux-x86-${version}"
	distfiles="http://us.download.nvidia.com/XFree86/Linux-x86/${version}/${_pkg}.run"
	checksum=2929d6e509ed4502312c1b7384f6d12cb63bd4af03fc847a281d3ccdd4db4f69
else
	_pkg="NVIDIA-Linux-x86_64-${version}-no-compat32"
	distfiles="http://us.download.nvidia.com/XFree86/Linux-x86_64/${version}/${_pkg}.run"
	checksum=8be6c64dddc2c2c5a0512bdacc71a77734de469ca11dfa435ca728fba57ccb9a
fi

subpackages="nvidia-gtklibs nvidia-dkms nvidia-opencl nvidia-libs"

do_extract() {
	install -m755 ${XBPS_SRCDISTDIR}/${pkgname}-${version}/${_pkg}.run ${wrksrc}
	cd ${wrksrc}
	./${_pkg}.run --extract-only
	rm -f ${_pkg}.run
}
do_configure() {
	cd ${_pkg}
	# patches
}
do_install() {
	cd ${_pkg}

	# X driver
	vinstall nvidia_drv.so 755 usr/lib/xorg/modules/drivers

	# GLX extension module for X
	vinstall libglx.so.${version} 755 usr/lib/xorg/modules/extensions
	ln -sf libglx.so.${version} ${DESTDIR}/usr/lib/xorg/modules/extensions/libglx.so
	ln -sf libglx.so.${version} ${DESTDIR}/usr/lib/xorg/modules/extensions/libglx.so.1

	# OpenGL library
	vinstall libGL.so.${version} 755 usr/lib
	ln -sf libGL.so.${version} ${DESTDIR}/usr/lib/libGL.so
	ln -sf libGL.so.${version} ${DESTDIR}/usr/lib/libGL.so.1

	# EGL library
	vinstall libEGL.so.${version} 755 usr/lib
	ln -sf libEGL.so.${version} ${DESTDIR}/usr/lib/libEGL.so
	ln -sf libEGL.so.${version} ${DESTDIR}/usr/lib/libEGL.so.1

	# OpenGL core library
	vinstall libnvidia-glcore.so.${version} 755 usr/lib
	ln -sf libnvidia-glcore.so.${version} ${DESTDIR}/usr/lib/libnvidia-glcore.so

	# VDPAU
	vinstall libvdpau_nvidia.so.${version} 755 usr/lib/vdpau
	ln -sf libvdpau_nvidia.so.${version} ${DESTDIR}/usr/lib/vdpau/libvdpau_nvidia.so
	ln -sf libvdpau_nvidia.so.${version} ${DESTDIR}/usr/lib/vdpau/libvdpau_nvidia.so.1

	# misc libraries
	vinstall tls/libnvidia-tls.so.${version} 755 usr/lib
	ln -sf libnvidia-tls.so.${version} ${DESTDIR}/usr/lib/libnvidia-tls.so

	vinstall libnvidia-cfg.so.${version} 755 usr/lib
	ln -sf libnvidia-cfg.so.${version} ${DESTDIR}/usr/lib/libnvidia-cfg.so
	ln -sf libnvidia-cfg.so.${version} ${DESTDIR}/usr/lib/libnvidia-cfg.so.1

	vinstall libnvidia-ml.so.${version} 755 usr/lib
	ln -sf libnvidia-ml.so.${version} ${DESTDIR}/usr/lib/libnvidia-ml.so
	ln -sf libnvidia-ml.so.${version} ${DESTDIR}/usr/lib/libnvidia-ml.so.1

	vinstall libnvidia-encode.so.${version} 755 usr/lib
	ln -sf libnvidia-encode.so.${version} ${DESTDIR}/usr/lib/libnvidia-encode.so
	ln -sf libnvidia-encode.so.${version} ${DESTDIR}/usr/lib/libnvidia-encode.so.1

	vinstall libnvidia-ifr.so.${version} 755 usr/lib
	ln -sf libnvidia-ifr.so.${version} ${DESTDIR}/usr/lib/libnvidia-ifr.so
	ln -sf libnvidia-ifr.so.${version} ${DESTDIR}/usr/lib/libnvidia-ifr.so.1

	vinstall libnvidia-fbc.so.${version} 755 usr/lib
	ln -sf libnvidia-fbc.so.${version} ${DESTDIR}/usr/lib/libnvidia-fbc.so
	ln -sf libnvidia-fbc.so.${version} ${DESTDIR}/usr/lib/libnvidia-fbc.so.1

	vinstall libnvidia-glsi.so.${version} 755 usr/lib
	ln -sf libnvidia-glsi.so.${version} ${DESTDIR}/usr/lib/libnvidia-glsi.so
	ln -sf libnvidia-glsi.so.${version} ${DESTDIR}/usr/lib/libnvidia-glsi.so.1

	# CUDA
	vbin nvidia-cuda-mps-control
	vbin nvidia-cuda-mps-server
	gzip -d nvidia-cuda-mps-control.1.gz
	vman nvidia-cuda-mps-control.1

	vinstall libcuda.so.${version} 755 usr/lib
	ln -sf libcuda.so.${version} ${DESTDIR}/usr/lib/libcuda.so
	ln -sf libcuda.so.${version} ${DESTDIR}/usr/lib/libcuda.so.1

	vinstall libnvcuvid.so.${version} 755 usr/lib
	ln -sf libnvcuvid.so.${version} ${DESTDIR}/usr/lib/libnvcuvid.so
	ln -sf libnvcuvid.so.${version} ${DESTDIR}/usr/lib/libnvcuvid.so.1

	# nvidia-xconfig
	vbin nvidia-xconfig
	gzip -d nvidia-xconfig.1.gz
	vman nvidia-xconfig.1

	# nvidia-settings
	vbin nvidia-settings
	gzip -d nvidia-settings.1.gz
	vman nvidia-settings.1
	vinstall nvidia-settings.desktop 644 usr/share/applications
	vinstall nvidia-settings.png 644 usr/share/pixmaps
	sed -e 's:__UTILS_PATH__:/usr/bin:' \
		-e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' \
		-i ${DESTDIR}/usr/share/applications/nvidia-settings.desktop

	vinstall libnvidia-gtk3.so.${version} 755 usr/lib
	ln -sf libnvidia-gtk3.so.${version} ${DESTDIR}/usr/lib/libnvidia-gtk3.so
	ln -sf libnvidia-gtk3.so.${version} ${DESTDIR}/usr/lib/libnvidia-gtk3.so.1
	vinstall libnvidia-gtk2.so.${version} 755 usr/lib
	ln -sf libnvidia-gtk2.so.${version} ${DESTDIR}/usr/lib/libnvidia-gtk2.so
	ln -sf libnvidia-gtk2.so.${version} ${DESTDIR}/usr/lib/libnvidia-gtk2.so.1

	# application profiles (needed by nvidia-settings)
	vinstall nvidia-application-profiles-${version}-key-documentation 644 usr/share/nvidia
	vinstall nvidia-application-profiles-${version}-rc 644 usr/share/nvidia

	# nvidia-bug-report
	vbin nvidia-bug-report.sh nvidia-bug-report
	vbin nvidia-debugdump

	# nvidia-smi
	vbin nvidia-smi
	gzip -d nvidia-smi.1.gz
	vman nvidia-smi.1

	# nvidia-modprobe
	vinstall nvidia-modprobe 4755 usr/bin
	gzip -d nvidia-modprobe.1.gz
	vman nvidia-modprobe.1

	# License and documentation
	vlicense LICENSE
	vdoc README.txt README
	vdoc NVIDIA_Changelog

	# opencl pkg
	vinstall nvidia.icd 644 etc/OpenCL/vendors

	vinstall libnvidia-compiler.so.${version} 755 usr/lib
	ln -sf libnvidia-compiler.so.${version} \
		${DESTDIR}/usr/lib/libnvidia-compiler.so
	ln -sf libnvidia-compiler.so.${version} \
		${DESTDIR}/usr/lib/libnvidia-compiler.so.1

	vinstall libnvidia-opencl.so.${version} 755 usr/lib
	ln -sf libnvidia-opencl.so.${version} \
		${DESTDIR}/usr/lib/libnvidia-opencl.so
	ln -sf libnvidia-opencl.so.${version} \
		${DESTDIR}/usr/lib/libnvidia-opencl.so.1

	# dkms pkg
	vmkdir usr/src/nvidia-${version}
	# add nvidia-uvm dkms submodule too.
	if [ "$XBPS_TARGET_MACHINE" = "x86_64" ]; then
		cat kernel/uvm/dkms.conf.fragment >> kernel/dkms.conf
	fi
	vcopy "kernel/*" usr/src/nvidia-${version}

	# systemd modules-load.d(5) file.
	vmkdir usr/lib/modules-load.d
	echo "nvidia" > ${DESTDIR}/usr/lib/modules-load.d/nvidia.conf
	chmod 644 ${DESTDIR}/usr/lib/modules-load.d/nvidia.conf
	if [ "$XBPS_TARGET_MACHINE" = "x86_64" ]; then
		echo "nvidia-uvm" > ${DESTDIR}/usr/lib/modules-load.d/nvidia-uvm.conf
		chmod 644 ${DESTDIR}/usr/lib/modules-load.d/nvidia-uvm.conf
	fi

	# Blacklist nouveau.
	vmkdir usr/lib/modprobe.d
	echo "blacklist nouveau" > ${DESTDIR}/usr/lib/modprobe.d/nvidia.conf
	chmod 644 ${DESTDIR}/usr/lib/modprobe.d/nvidia.conf

	# Omit drm dracut module too.
	vmkdir usr/lib/dracut/dracut.conf.d
	echo "omit_dracutmodules+=\" drm \"" > ${DESTDIR}/usr/lib/dracut/dracut.conf.d/99-nvidia.conf
}

nvidia-gtklibs_package() {
	short_desc="${_desc} - GTK+ libraries"
	pkg_install() {
		vmove usr/lib/lib*gtk*.so*
	}
}
nvidia-libs_package() {
	short_desc="${_desc} - common libraries"
	provides="libEGL-${version}_${revision} libGL-${version}_${revision}"
	replaces="libEGL>=0 libGL>=0"
	pkg_install() {
		vmove usr/lib
	}
}
nvidia-dkms_package() {
	short_desc="${_desc} - DKMS kernel module"
	triggers="dkms"
	dkms_modules="nvidia ${version}"
	depends="dkms"
	pkg_install() {
		vmove usr/src
		vmove usr/lib/modules-load.d
		vmove usr/lib/modprobe.d
		vmove usr/lib/dracut
	}
}
nvidia-opencl_package() {
	short_desc="${_desc} - OpenCL implementation"
	depends="libOpenCL"
	pkg_install() {
		vmove "usr/lib/libnvidia-compiler*"
		vmove "usr/lib/libnvidia-opencl*"
		vmove etc/OpenCL
	}
}
